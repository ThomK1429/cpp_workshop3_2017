


C++ pgm - we can write whole program as 1 component, into one piece. 

	- where do we put our pgm?  We put it into a component called main().
	- it is a function.  it is the first thing C++ will run. 

	- what does the main function look like?

	-       int main() { 
		
		    your pgm statements go here

		
		    return 0;	
		}
		

	- a pgm is more manageable if we can break it down into smaller functional pieces. 
	- if a pgm is broken down into smaller functional pieces, many people, computer
	  pgmers, can work on the pgm at the same time, shortening the time to write it. 
	  Maybe the specific pieces require a certain expertise, so the appropriate 
	  person can work on it. 

	--------------------------------------------------------------------------------
	

	- what is a function? 
	  
		- p346, it is like a miniature, standalone pgm.
		- it is like a building block, put together, can to make one big pgm. 


	- functions are also called modules


	--------------------------------------------------------------------------------

	- 2 types of functions

		- p346, PREDEFINED FUNCTIONS
		- functions that are already written for us


		- p350, USER DEFINED FUNCTIONS
		- functions that we will write


	--------------------------------------------------------------------------------
6'/;;;

	- PREDEFINED FUNCTIONS - EXAMPLES

		- prewritten functions such as: 
			abs() - find the absolute value of a number
			exp() - raise e to the power of
			sqrt() - find the square root of
			ceil() - round up
			floor() - round down
			pow() - raise a number to the power of
			atan() - compute the arc tangent value
			
		- header file must be added to your code to utilize these functions
		- http://www.cplusplus.com/reference/cmath/		- general
		- http://www.cplusplus.com/reference/cmath/sqrt/ 	- specific - sqrt
			#include <cmath>
		    or	#include <math.h>

		- c++ open source libraries: http://en.cppreference.com/w/cpp/links/libs
		- c++ standard libraries: http://en.cppreference.com/w/cpp/header
			- such as: strings(string, ...), numerics (cmath, ...),
			  input/output libary (iostream, fstream, ...), regex  

		- google c++ library - choices when typing:
			
		- SEE EXAMPLES: 010-predefined-functions.cpp 

		- Format:    #include <header file name> 

			     functionName(parameters to be passed to the function if any)

	
	--------------------------------------------------------------------------------
		
	- USER DEFINED FUNCTIONS - EXAMPLES

		- two types: 
			VOID FUNCTIONS 
				- 650-void-functions-myAbsv-myHeading.cpp

			VALUE RETURNING FUNCTIONS 
				- 610-value-returning-function-myAbs.cpp
				- 610-value-returning-function-myAbsv2.cpp (no prototype)

			        - returns only one value - p351, p354    
				                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             - terminology  

			function prototype, return dataType, functionName, 
			formal parameter/argument list, dataType, identifier, 
			statements, return expression

			- 600-value-returning-functions.txt  - also p351-2  - word desc of func,

		- types of parameters
			- https://stackoverflow.com/questions/18870156/what-is-a-formal-parameter  (both)
		
			- formal parameters - found in the definition of the function

			- actual parameters - found the actual call of the function


		- formal parameters - continued  - p378 - 2 types - value and reference

			- VALUE PARAMETERS - "a copy of the value of the arguments is passed into the function"
			  https://www.cs.mtsu.edu/~cs1170/manual/lab8/lab8.html#three
			  p378, p382 description

				- example program p383


			- REFERENCE PARAMETERS



	--------------------------------------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

	- RECURSION